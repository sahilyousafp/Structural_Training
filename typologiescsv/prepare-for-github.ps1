# GitHub Repository Preparation Script
Write-Host "Preparing repository for GitHub push..." -ForegroundColor Green

# Define directories that should be excluded
$excludeDirs = @(
    "node_modules",
    "build",
    "Output",
    "output",
    "test-output",
    "deployment-package",
    "typologiescsv"
)

# Define files that should be excluded
$excludeExtensions = @(
    "*.log",
    "*.bak",
    "*.tmp",
    "*.temp",
    "*.old",
    "*.simplified"
)

# Remove excluded directories if they exist
foreach ($dir in $excludeDirs) {
    $dirPath = Join-Path -Path $PWD -ChildPath $dir
    if (Test-Path $dirPath) {
        Write-Host "Removing directory: $dir" -ForegroundColor Yellow
        Remove-Item -Path $dirPath -Recurse -Force -ErrorAction SilentlyContinue
    }
}

# Remove excluded files
foreach ($ext in $excludeExtensions) {
    Write-Host "Removing files with extension: $ext" -ForegroundColor Yellow
    Get-ChildItem -Path $PWD -Recurse -Include $ext | ForEach-Object {
        Write-Host "  Removing file: $($_.Name)" -ForegroundColor Gray
        Remove-Item $_ -Force -ErrorAction SilentlyContinue
    }
}

# Remove Docker volume data if it exists
$volumeDir = Join-Path -Path $PWD -ChildPath "mongo-data"
if (Test-Path $volumeDir) {
    Write-Host "Removing Docker volume data: mongo-data" -ForegroundColor Yellow
    Remove-Item -Path $volumeDir -Recurse -Force -ErrorAction SilentlyContinue
}

# Create required output directory for git to track
$outputDir = Join-Path -Path $PWD -ChildPath "output"
if (-not (Test-Path $outputDir)) {
    Write-Host "Creating empty output directory" -ForegroundColor Yellow
    New-Item -Path $outputDir -ItemType Directory -Force | Out-Null
    New-Item -Path "$outputDir\.gitkeep" -ItemType File -Force | Out-Null
}

# Make sure the .gitignore file is properly set up
Write-Host "Verifying .gitignore file" -ForegroundColor Yellow
$gitignorePath = Join-Path -Path $PWD -ChildPath ".gitignore"
if (Test-Path $gitignorePath) {
    Write-Host "  .gitignore exists" -ForegroundColor Gray
} else {
    Write-Host "  Creating .gitignore file" -ForegroundColor Yellow
    Set-Content -Path $gitignorePath -Value "# Generated by GitHub preparation script

# dependencies
/node_modules
/.pnp
.pnp.js

# testing
/coverage

# production
/build
/deployment-package

# Development environment
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
logs
*.log

# Output directories
/Output
/output/*
!/output/.gitkeep
/test-output
**/Output

# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?
.DS_Store

# Temporary/backup files
*.bak
*.simplified
*.tmp
*.temp
*.old
*.new

# Large files and datasets
**/typologiescsv/possible3ds/index.json
/typologiescsv

# Docker volumes
**/mongo-data
"
}

Write-Host "Repository preparation complete!" -ForegroundColor Green
Write-Host "You can now push your changes to GitHub with the following commands:" -ForegroundColor Cyan
Write-Host "  git add ." -ForegroundColor White
Write-Host "  git commit -m 'Initial commit'" -ForegroundColor White
Write-Host "  git push origin main" -ForegroundColor White
